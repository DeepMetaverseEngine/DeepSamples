
// Warning: do not edit this file.
// 警告: 不要编辑此文件

// ThreeLives.Client.Protocol, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// TLProtocol.Data.ClientPartnerData


using DeepCore;
using DeepCore.IO;
using System.Collections.Generic;

namespace TLClient
{
    // TLProtocol.Data
    public partial class Serializer
    {
        // msg id    : 0x00088001 : 557057
        // base type : 
        public static void W_TLProtocol_Data_ClientPartnerData(IOutputStream output, object msg)
        {
            var data = (TLProtocol.Data.ClientPartnerData)msg;
                        
            output.PutS32(data.ID);
            output.PutUTF(data.Name);
            output.PutS32(data.Lv);
            output.PutS32(data.Qualification);
            output.PutS32(data.QLv);
            output.PutArray(data.EquipLv, output.PutS32);
            output.PutU64(data.CurEXP);
            output.PutU64(data.NeedEXP);
            output.PutS32(data.FightPower);
            output.PutEnum8(data.CurStatus);
            output.PutS64(data.RebirthTimeStamp);
            output.PutObj(data.BattleProp);
            output.PutMap(data.SkillData, output.PutS32, output.PutObj);
            output.PutS32(data.SkillSlotCount);
        }
        public static void R_TLProtocol_Data_ClientPartnerData(IInputStream input, object msg)
        {
            var data = (TLProtocol.Data.ClientPartnerData)msg;
                        
            data.ID = input.GetS32();
            data.Name = input.GetUTF();
            data.Lv = input.GetS32();
            data.Qualification = input.GetS32();
            data.QLv = input.GetS32();
            data.EquipLv = input.GetArray<int>(input.GetS32);
            data.CurEXP = input.GetU64();
            data.NeedEXP = input.GetU64();
            data.FightPower = input.GetS32();
            data.CurStatus = input.GetEnum8<TLProtocol.Data.ClientPartnerData.PartnerStatus>();
            data.RebirthTimeStamp = input.GetS64();
            data.BattleProp = input.GetObj<TLProtocol.Data.ClientPartnerBattleProp>();
            data.SkillData = input.GetMap<int, TLProtocol.Data.ClientPartnerSkillData>(input.GetS32, input.GetObj<TLProtocol.Data.ClientPartnerSkillData>);
            data.SkillSlotCount = input.GetS32();
        }      
    }
}

