
// Warning: do not edit this file.
// 警告: 不要编辑此文件

// ThreeLives.Client.Protocol, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// TLProtocol.Data.MessageSnap


using DeepCore;
using DeepCore.IO;
using System.Collections.Generic;

namespace TLClient
{
    // TLProtocol.Data
    public partial class Serializer
    {
        // msg id    : 0x00083004 : 536580
        // base type : 
        public static void W_TLProtocol_Data_MessageSnap(IOutputStream output, object msg)
        {
            var data = (TLProtocol.Data.MessageSnap)msg;
                        
            output.PutUTF(data.id);
            output.PutEnum8(data.type);
            output.PutS32(data.lifeTimeMS);
            output.PutUTF(data.strMsg);
            output.PutUTF(data.fromRoleID);
            output.PutUTF(data.targetRoleID);
            output.PutArray(data.syncPlayers, output.PutObj);
        }
        public static void R_TLProtocol_Data_MessageSnap(IInputStream input, object msg)
        {
            var data = (TLProtocol.Data.MessageSnap)msg;
                        
            data.id = input.GetUTF();
            data.type = input.GetEnum8<TLProtocol.Data.AlertMessageType>();
            data.lifeTimeMS = input.GetS32();
            data.strMsg = input.GetUTF();
            data.fromRoleID = input.GetUTF();
            data.targetRoleID = input.GetUTF();
            data.syncPlayers = input.GetArray<TLProtocol.Data.MessageHandleData>(input.GetObj<TLProtocol.Data.MessageHandleData>);
        }      
    }
}

