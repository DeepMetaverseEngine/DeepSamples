
// Warning: do not edit this file.
// 警告: 不要编辑此文件

// ThreeLives.Client.Protocol, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// TLProtocol.Data.DemonTowerData


using DeepCore;
using DeepCore.IO;
using System.Collections.Generic;

namespace TLClient
{
    // TLProtocol.Data
    public partial class Serializer
    {
        // msg id    : 0x00040001 : 262145
        // base type : 
        public static void W_TLProtocol_Data_DemonTowerData(IOutputStream output, object msg)
        {
            var data = (TLProtocol.Data.DemonTowerData)msg;
                        
            output.PutS32(data.resetTime);
            output.PutS32(data.maxResetTime);
            output.PutS32(data.curLayer);
            output.PutList(data.giftData, output.PutS32);
            output.PutList(data.alonePassTime, output.PutS32);
            output.PutList(data.serverPassData, output.PutObj);
        }
        public static void R_TLProtocol_Data_DemonTowerData(IInputStream input, object msg)
        {
            var data = (TLProtocol.Data.DemonTowerData)msg;
                        
            data.resetTime = input.GetS32();
            data.maxResetTime = input.GetS32();
            data.curLayer = input.GetS32();
            data.giftData = input.GetList<int>(input.GetS32);
            data.alonePassTime = input.GetList<int>(input.GetS32);
            data.serverPassData = input.GetList<TLProtocol.Data.ServerPassData>(input.GetObj<TLProtocol.Data.ServerPassData>);
        }      
    }
}

