
-- Warning: do not edit this file.
-- 警告: 不要编辑此文件

-- DeepMMO, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
-- DeepMMO.Protocol.Client.ClientEnterGateResponse


local _M = {MessageID = 0x00031002,Name = 'DeepMMO.Protocol.Client.ClientEnterGateResponse'}
_M.__index = _M
function _M.IsSuccess(self)
	return self.s2c_code == 200
end
Protocol.Serializer[0x00031002] = _M
Protocol.Serializer.StringDefined['DeepMMO.Protocol.Client.ClientEnterGateResponse'] = _M

function _M.Write(output,data)
	Protocol.Serializer.StringDefined['DeepMMO.Protocol.Response'].Write(output, data)
	if data:IsSuccess()==true then
	output:PutUTF(data.s2c_accountUUID)
	output:PutUTF(data.s2c_connectHost)
	output:PutS32(data.s2c_connectPort)
	output:PutUTF(data.s2c_connectToken)
	output:PutS32(data.s2c_logicServerID)
	output:PutUTF(data.s2c_lastLoginRoleID)
	output:PutUTF(data.s2c_lastLoginToken)
	output:PutList(data.s2c_roleIDList, output.PutOBJ,'DeepMMO.Data.RoleIDSnap')
	output:PutUTF(data.s2c_platformAccount)
	end
	if data:IsInQueue()==true then
	output:PutS32(data.s2c_queueCount)
	output:PutTimeSpan(data.s2c_queuetTime)
	end
end


function _M.Read(input,data)
	Protocol.Serializer.StringDefined['DeepMMO.Protocol.Response'].Read(input, data)
	if data:IsSuccess()==true then
	data.s2c_accountUUID = input:GetUTF()
	data.s2c_connectHost = input:GetUTF()
	data.s2c_connectPort = input:GetS32()
	data.s2c_connectToken = input:GetUTF()
	data.s2c_logicServerID = input:GetS32()
	data.s2c_lastLoginRoleID = input:GetUTF()
	data.s2c_lastLoginToken = input:GetUTF()
	data.s2c_roleIDList = input:GetList(input.GetOBJ,'DeepMMO.Data.RoleIDSnap')
	data.s2c_platformAccount = input:GetUTF()
	end
	if data:IsInQueue()==true then
	data.s2c_queueCount = input:GetS32()
	data.s2c_queuetTime = input:GetTimeSpan()
	end
end


