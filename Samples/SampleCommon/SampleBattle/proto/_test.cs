//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using CommonLang.IO;
using System.Collections.Generic;

// ***************************************************************************
// * 创建时间: 2015-08-27
// * 用途: 通用模块
// ***************************************************************************

// Generated from: common.proto
namespace test
{
  
  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// 空消息
  /// </summary>
  public class Void : CommonLang.Protocol.NetMessage
  {
    public Void() {}
    

    public override void ReadExternal(IInputStream input)
    {
    }
    public override void WriteExternal(IOutputStream output)
    {
    }
  }


  //---------------------------------------------------------------------------------------
  
  public class EffectPropertyStruct : CommonLang.Protocol.NetMessage
  {
    public EffectPropertyStruct() {}
    
    public string describ;
  
    public int value = default(int);
  
    public string maxValue = "";
  
    public string name = "";
  

    public override void ReadExternal(IInputStream input)
    {
      this.describ = input.GetUTF();
      this.value = input.GetS32();
      this.maxValue = input.GetUTF();
      this.name = input.GetUTF();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutUTF(this.describ);
      output.PutS32(this.value);
      output.PutUTF(this.maxValue);
      output.PutUTF(this.name);
    }
  }


  //---------------------------------------------------------------------------------------
  
  public class PropertyStruct : CommonLang.Protocol.NetMessage
  {
    public PropertyStruct() {}
    
    public string key;
  
    public string value;
  
    public int type;
  

    public override void ReadExternal(IInputStream input)
    {
      this.key = input.GetUTF();
      this.value = input.GetUTF();
      this.type = input.GetS32();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutUTF(this.key);
      output.PutUTF(this.value);
      output.PutS32(this.type);
    }
  }


  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// Key-Value
  /// </summary>
  public class KeyValueStruct : CommonLang.Protocol.NetMessage
  {
    public KeyValueStruct() {}
    
    public string key;
  
    public string value;
  

    public override void ReadExternal(IInputStream input)
    {
      this.key = input.GetUTF();
      this.value = input.GetUTF();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutUTF(this.key);
      output.PutUTF(this.value);
    }
  }


  //---------------------------------------------------------------------------------------
  
  public class ObjectProperty : CommonLang.Protocol.NetMessage
  {
    public ObjectProperty() {}
    
    public int id;
  
    public List<test.PropertyStruct> props = new List<test.PropertyStruct>();


    public override void ReadExternal(IInputStream input)
    {
      this.id = input.GetS32();
      this.props = input.GetList<test.PropertyStruct>(input.GetExt<test.PropertyStruct>);
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.id);
      output.PutList<test.PropertyStruct>(this.props, output.PutExt);
    }
  }


  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// 属性基本结构
  /// </summary>
  public class AttributeBase : CommonLang.Protocol.NetMessage
  {
    public AttributeBase() {}
    
    /// <summary>
    /// 属性id
    /// </summary>
    public int id;
  
    /// <summary>
    /// 属性值
    /// </summary>
    public int value = default(int);
  
    /// <summary>
    /// 是否是百分比
    /// </summary>
    public int isFormat = default(int);
  
    /// <summary>
    /// 下一级属性(可选)
    /// </summary>
    public int nextValue = default(int);
  
    /// <summary>
    /// 最大值属性
    /// </summary>
    public int minValue = default(int);
  
    /// <summary>
    /// 最小值属性
    /// </summary>
    public int maxValue = default(int);
  
    /// <summary>
    /// 待定1 装备的强化增加值 技能id
    /// </summary>
    public int param1 = default(int);
  
    /// <summary>
    /// 待定2 技能等级
    /// </summary>
    public int param2 = default(int);
  
    /// <summary>
    /// 待定3
    /// </summary>
    public int param3 = default(int);
  

    public override void ReadExternal(IInputStream input)
    {
      this.id = input.GetS32();
      this.value = input.GetS32();
      this.isFormat = input.GetS32();
      this.nextValue = input.GetS32();
      this.minValue = input.GetS32();
      this.maxValue = input.GetS32();
      this.param1 = input.GetS32();
      this.param2 = input.GetS32();
      this.param3 = input.GetS32();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.id);
      output.PutS32(this.value);
      output.PutS32(this.isFormat);
      output.PutS32(this.nextValue);
      output.PutS32(this.minValue);
      output.PutS32(this.maxValue);
      output.PutS32(this.param1);
      output.PutS32(this.param2);
      output.PutS32(this.param3);
    }
  }


  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// 属性最简结构
  /// </summary>
  public class AttributeSimple : CommonLang.Protocol.NetMessage
  {
    public AttributeSimple() {}
    
    /// <summary>
    /// 属性id
    /// </summary>
    public int id;
  
    /// <summary>
    /// 属性值
    /// </summary>
    public int value = default(int);
  

    public override void ReadExternal(IInputStream input)
    {
      this.id = input.GetS32();
      this.value = input.GetS32();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.id);
      output.PutS32(this.value);
    }
  }


  //---------------------------------------------------------------------------------------
  
  public class SkillKeyStruct : CommonLang.Protocol.NetMessage
  {
    public SkillKeyStruct() {}
    
    public int keyPos;
  
    public int baseSkillId;
  
    public int advancedSkillId;
  
    public string icon;
  
    /// <summary>
    /// 0为没开  1为开启
    /// </summary>
    public int flag;
  
    /// <summary>
    /// 解锁等级
    /// </summary>
    public int unlockLevel;
  
    public string name = "";
  

    public override void ReadExternal(IInputStream input)
    {
      this.keyPos = input.GetS32();
      this.baseSkillId = input.GetS32();
      this.advancedSkillId = input.GetS32();
      this.icon = input.GetUTF();
      this.flag = input.GetS32();
      this.unlockLevel = input.GetS32();
      this.name = input.GetUTF();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.keyPos);
      output.PutS32(this.baseSkillId);
      output.PutS32(this.advancedSkillId);
      output.PutUTF(this.icon);
      output.PutS32(this.flag);
      output.PutS32(this.unlockLevel);
      output.PutUTF(this.name);
    }
  }


}
  
// ***************************************************************************
// * 创建时间= 2015-08-27
// * TEST
// ***************************************************************************

// Generated from: test.proto
// Note: requires additional types generated from: common.proto
namespace test
{
  
  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// 获取成就项
  /// </summary>
  public class AchievementGetTypesRequest : CommonLang.Protocol.NetMessage
  {
    public AchievementGetTypesRequest() {}
    

    public override void ReadExternal(IInputStream input)
    {
    }
    public override void WriteExternal(IOutputStream output)
    {
    }
  }


  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// 获取成就项内容
  /// </summary>
  public class AchievementGetTypeElementRequest : CommonLang.Protocol.NetMessage
  {
    public AchievementGetTypeElementRequest() {}
    
    public int c2s_id;
  

    public override void ReadExternal(IInputStream input)
    {
      this.c2s_id = input.GetS32();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.c2s_id);
    }
  }


  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// 领取奖励
  /// </summary>
  public class AchievementGetAwardRequest : CommonLang.Protocol.NetMessage
  {
    public AchievementGetAwardRequest() {}
    
    public int c2s_id;
  
    /// <summary>
    /// 类型
    /// </summary>
    public test.AchievementGetAwardRequest.ReqType req_type = test.AchievementGetAwardRequest.ReqType.TYPE1;
  
  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// 枚举类型
  /// </summary>
  public enum ReqType
  {
    
    /// <summary>
    /// 类型1
    /// </summary>
    TYPE1 = 1,
    
    /// <summary>
    /// 类型2
    /// </summary>
    TYPE2 = 2
  }
  

    public override void ReadExternal(IInputStream input)
    {
      this.c2s_id = input.GetS32();
      this.req_type = input.GetEnum8<test.AchievementGetAwardRequest.ReqType>();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.c2s_id);
      output.PutEnum8<test.AchievementGetAwardRequest.ReqType>(this.req_type);
    }
  }


  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// 成就内容
  /// </summary>
  public class Achievement : CommonLang.Protocol.NetMessage
  {
    public Achievement() {}
    
    /// <summary>
    /// 成就id
    /// </summary>
    public int id;
  
    /// <summary>
    /// 成就完成进度
    /// </summary>
    public int scheduleCurr;
  

    public override void ReadExternal(IInputStream input)
    {
      this.id = input.GetS32();
      this.scheduleCurr = input.GetS32();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.id);
      output.PutS32(this.scheduleCurr);
    }
  }


  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// 成就项
  /// </summary>
  public class AchievementType : CommonLang.Protocol.NetMessage
  {
    public AchievementType() {}
    
    /// <summary>
    /// 成就项id
    /// </summary>
    /// <summary>
    /// 1,2,3,4,5
    /// </summary>
    public int id;
  
    /// <summary>
    /// 当前项总成就点
    /// </summary>
    public int maxScore = default(int);
  
    /// <summary>
    /// 当前项当前成就点
    /// </summary>
    public int currScore = default(int);
  
    /// <summary>
    /// 数据类型
    /// </summary>
    public test.DataEnum dataType = test.DataEnum.TYPEA;
  
    /// <summary>
    /// 数据类型
    /// </summary>
    public List<test.DataEnum> dataTypes = new List<test.DataEnum>();


    public override void ReadExternal(IInputStream input)
    {
      this.id = input.GetS32();
      this.maxScore = input.GetS32();
      this.currScore = input.GetS32();
      this.dataType = input.GetEnum8<test.DataEnum>();
      this.dataTypes = input.GetList<test.DataEnum>(input.GetEnum8<test.DataEnum>);
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.id);
      output.PutS32(this.maxScore);
      output.PutS32(this.currScore);
      output.PutEnum8<test.DataEnum>(this.dataType);
      output.PutList<test.DataEnum>(this.dataTypes, output.PutEnum8<test.DataEnum>);
    }
  }


  //---------------------------------------------------------------------------------------
  
  public class AchievementGetAllResponse : CommonLang.Protocol.NetMessage
  {
    public AchievementGetAllResponse() {}
    
    public int s2c_code;
  
    public string s2c_msg = "";
  
    public List<test.AchievementType> s2c_achievementTypes = new List<test.AchievementType>();

    public List<test.Achievement> s2c_achievements = new List<test.Achievement>();


    public override void ReadExternal(IInputStream input)
    {
      this.s2c_code = input.GetS32();
      this.s2c_msg = input.GetUTF();
      this.s2c_achievementTypes = input.GetList<test.AchievementType>(input.GetExt<test.AchievementType>);
      this.s2c_achievements = input.GetList<test.Achievement>(input.GetExt<test.Achievement>);
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.s2c_code);
      output.PutUTF(this.s2c_msg);
      output.PutList<test.AchievementType>(this.s2c_achievementTypes, output.PutExt);
      output.PutList<test.Achievement>(this.s2c_achievements, output.PutExt);
    }
  }


  //---------------------------------------------------------------------------------------
  
  public class AchievementGetTypesResponse : CommonLang.Protocol.NetMessage
  {
    public AchievementGetTypesResponse() {}
    
    public int s2c_code;
  
    public string s2c_msg = "";
  
    public List<test.AchievementType> s2c_achievementTypes = new List<test.AchievementType>();

    public int s2c_totalScore = default(int);
  
    public int s2c_leader = default(int);
  
    public List<int> s2c_rewardCount = new List<int>();

    public List<string> s2c_results = new List<string>();


    public override void ReadExternal(IInputStream input)
    {
      this.s2c_code = input.GetS32();
      this.s2c_msg = input.GetUTF();
      this.s2c_achievementTypes = input.GetList<test.AchievementType>(input.GetExt<test.AchievementType>);
      this.s2c_totalScore = input.GetS32();
      this.s2c_leader = input.GetS32();
      this.s2c_rewardCount = input.GetList<int>(input.GetS32);
      this.s2c_results = input.GetList<string>(input.GetUTF);
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.s2c_code);
      output.PutUTF(this.s2c_msg);
      output.PutList<test.AchievementType>(this.s2c_achievementTypes, output.PutExt);
      output.PutS32(this.s2c_totalScore);
      output.PutS32(this.s2c_leader);
      output.PutList<int>(this.s2c_rewardCount, output.PutS32);
      output.PutList<string>(this.s2c_results, output.PutUTF);
    }
  }


  //---------------------------------------------------------------------------------------
  
  public class AchievementGetTypeElementResponse : CommonLang.Protocol.NetMessage
  {
    public AchievementGetTypeElementResponse() {}
    
    public int s2c_code;
  
    public string s2c_msg = "";
  
    public List<test.Achievement> s2c_achievements = new List<test.Achievement>();

    public List<int> s2c_rewardCount = new List<int>();

    public test.Achievement s2c_single;
  

    public override void ReadExternal(IInputStream input)
    {
      this.s2c_code = input.GetS32();
      this.s2c_msg = input.GetUTF();
      this.s2c_achievements = input.GetList<test.Achievement>(input.GetExt<test.Achievement>);
      this.s2c_rewardCount = input.GetList<int>(input.GetS32);
      this.s2c_single = input.GetExt<test.Achievement>();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.s2c_code);
      output.PutUTF(this.s2c_msg);
      output.PutList<test.Achievement>(this.s2c_achievements, output.PutExt);
      output.PutList<int>(this.s2c_rewardCount, output.PutS32);
      output.PutExt(this.s2c_single);
    }
  }


  //---------------------------------------------------------------------------------------
  
  public class AchievementGetAwardResponse : CommonLang.Protocol.NetMessage
  {
    public AchievementGetAwardResponse() {}
    
    public int s2c_code;
  
    public string s2c_msg = "";
  

    public override void ReadExternal(IInputStream input)
    {
      this.s2c_code = input.GetS32();
      this.s2c_msg = input.GetUTF();
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.s2c_code);
      output.PutUTF(this.s2c_msg);
    }
  }


  //---------------------------------------------------------------------------------------
  
  public class OnAchievementPush : CommonLang.Protocol.NetMessage
  {
    public OnAchievementPush() {}
    
    public int s2c_code;
  
    public int s2c_id = default(int);
  
    public List<test.Achievement> s2c_achievements = new List<test.Achievement>();


    public override void ReadExternal(IInputStream input)
    {
      this.s2c_code = input.GetS32();
      this.s2c_id = input.GetS32();
      this.s2c_achievements = input.GetList<test.Achievement>(input.GetExt<test.Achievement>);
    }
    public override void WriteExternal(IOutputStream output)
    {
      output.PutS32(this.s2c_code);
      output.PutS32(this.s2c_id);
      output.PutList<test.Achievement>(this.s2c_achievements, output.PutExt);
    }
  }


  //---------------------------------------------------------------------------------------
  
  /// <summary>
  /// 数据类型
  /// </summary>
  public enum DataEnum
  {
    
    /// <summary>
    /// 类型A
    /// </summary>
    TYPEA = 1,
    
    /// <summary>
    /// 类型B
    /// </summary>
    TYPEB = 2
  }
  
}
  