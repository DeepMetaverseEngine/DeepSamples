---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xujing.xu.
--- DateTime: 2019/2/13 11:31
--- 经脉
--- self.TabTag 1左边，2中间，3右上，4右下
--- 总共3页 1左边，2主页，3右边

local _M = {}
_M.__index = _M

local MeridiansModel = require 'Model/MeridiansModel'
local Util = require 'Logic/Util'
local UIUtil = require 'UI/UIUtil'
local ItemModel = require 'Model/ItemModel'


--是否点击了右下(用以区分右上)
local down = false

local loadDataFinish=false

--tabtag+pos=>index 
--1左 2中 3右
local function ConvertToIndex(self,tabtag,index)
    return self.mainIndex[tonumber(tabtag..index)]
end

local function FindSubInfoByAllMeridians(self,mainindex,subindex)
    for i, v in ipairs(self.AllMeridiansInfo) do
        if v.main==mainindex and v.sub == subindex then
            return v
        end
    end
end

--加载/卸载特效
local function PlayEffect(self,node,res)
    local transSet = TransformSet()
    transSet.Layer = Constants.Layer.UI
    transSet.LayerOrder = 1000--self.ui.menu.MenuOrder
    transSet.Pos = Vector3(0,0,-100)
    transSet.Scale= Vector3(1,1,1)
    transSet.Parent = node.Transform
    
    self.eff =self.eff or {}
    local num = #self.eff + 1
    self.eff[num] = RenderSystem.Instance:LoadGameObject(res, transSet, function(aoe)
    end)
end
local function ReleaseEffect(self)
    if self.eff then
        for i, v in ipairs(self.eff) do
            RenderSystem.Instance:Unload(self.eff[i])
        end
        self.eff= {}
    end
end


--设置下方的物品数量
local function ShowItem(self)
    self.comps.lb_expnum.Text = DataMgr.Instance.UserData.OverFlowExp
end


--传入大圆盘id，计算该id下小穴位是否激活
local function IsGray(self,mainIndex)
    --取该圆盘第一个穴位id
    local id =(mainIndex-1)*5+1
    --已激活 不置灰
    for j, k in ipairs(self.ActivitedList) do
        if k == id then
            return false
        end
    end
    --可激活 不置灰
    for l, m in ipairs(MeridiansModel.UnlockedList) do
        if m == id then
            return false
        end
    end
    --两个都不在，置灰
    return true
end

--打开UI和翻页之后，刷新UI界面
--(index代表页数(123),self.TabTag代表标签(1234),mainIndex代表每个盘对应的Main类型)
local function UpDateNowMeridians(self)
    ReleaseEffect(self)
    local index = self.TabTag == 4 and 3 or self.TabTag

    --i-->大圆盘位置，j-->小圆点位置
    for i, v in ipairs(self.MeridiansNode[index]) do
        local mainIndex = ConvertToIndex(self,self.TabTag,i)

        v.IsGray = IsGray(self,mainIndex)

        local lb_totalname = v:FindChildByEditName('lb_totalname',true)
        lb_totalname.Text = self.AllMeridiansInfo[(mainIndex-1)*5+1]
                and Util.GetText(self.AllMeridiansInfo[(mainIndex-1)*5+1].mainname) or (mainIndex-1)*5+1
        for j = 1, 5 do
            local id = (mainIndex-1)*5+j
            local name = v:FindChildByEditName('lb_name'..j,true)
            local sub=FindSubInfoByAllMeridians(self,mainIndex,j)
            name.Text = sub and Util.GetText(sub.subname) or id

            --字体颜色
            name.FontColor = GameUtil.RGB2Color(Constants.Color.White)
            for i, v in ipairs(self.ActivitedList) do
                if v ==id then
                    name.FontColor = GameUtil.RGB2Color(0x220221)
                    break
                end
            end
            
            --红点
            local lb_red =v:FindChildByEditName('lb_red'..j,true)
            if not self.redPoint[id] then
                self.redPoint[id] =lb_red
            end
            GlobalHooks.UI.ShowRedPoint(lb_red,0,'meridiansadvance')
            for i, v in ipairs(MeridiansModel.UnlockedList) do
                if v==id and MeridiansModel.IsCanAdvanceMeridians(v) then
                    GlobalHooks.UI.ShowRedPoint(lb_red,1,'meridiansadvance')
                end
            end
            
            --激活状态
            local ib_enable =v:FindChildByEditName('ib_enable'..j,true)
            ib_enable.Visible = false
            --特效
            local cvs_anchor = v:FindChildByEditName('cvs_anchor'..j,true)
            if self.ActivitedList then
                for i, v in ipairs(self.ActivitedList) do
                    if v == id then
                        ib_enable.Visible = true
                        PlayEffect(self,cvs_anchor,'/res/effect/ui/ef_ui_interface_dot_02.assetbundles')
                    end
                end
            end
        end
    end
    loadDataFinish = true
end


--显示冲穴UI
local function ShowPowerUp(self,index,choose,meridiansindex)

    if TLUnityDebug.DEBUG_MODE then
        print_r('MeridiansActivitedList',self.ActivitedList)
        print_r('MeridiansUnlockedList',self.UnlockedList)
    end
    
    self.ib_choose =choose
    local mainIndex = ConvertToIndex(self,self.TabTag,index)
--[[    print_r(string.format('第%s页,第%s个',self.TabTag,index))
    print_r('对应的索引',mainIndex)]]
    
    --取出数据倒序显示
    local subInfo=MeridiansModel.GetSubDetailByMain(mainIndex)
    table.sort(subInfo,function (a,b)
        return a.sub > b.sub
    end)
    --当前经脉类型最后一档
    local maxSub= subInfo[1]
    
    self.comps.lb_expcost.Text = Util.GetText('pvp_rewardcount',maxSub.cost.costnum[2]..'/')

    self.comps.cvs_up.Visible=true
    local needExp={}
    local function SetGGValue(fenzi,fenmu)
        local lv = 0 --激活到该大穴位的第几档小穴位
        for i, v in ipairs(subInfo) do
            if fenzi >=subInfo[i].cost_num then
                lv = (#subInfo+1)-i
                break
            end
        end
        
        if lv == 0 then --未激活小穴位(只走最下面的进度条)
            self.progressBar[1].Value = (fenzi/subInfo[#subInfo].cost_num)*100
            for i = 2, #self.progressBar do
                self.progressBar[i].Value = 0
            end
        else--激活某穴位
            for i, v in ipairs(self.progressBar) do
                if i <= lv then --已激活
                    self.progressBar[i].Value = 100
                elseif i == lv+1 then --正在激活
                    self.progressBar[i].Value = ((fenzi-subInfo[#subInfo+2-i].cost_num)/(subInfo[#subInfo+1-i].cost_num-subInfo[#subInfo+2-i].cost_num))*100
                else --未激活
                    self.progressBar[i].Value = 0
                end
            end
        end
        
        self.comps.lb_upnum.Text = string.format('(%d/%d)',fenzi,fenmu)
    end
    
    MeridiansModel.RequestGetMeridiansInfo(mainIndex,function (rsp)
        SetGGValue(rsp.s2c_cost[1],maxSub.cost_num)
        
        self.comps.cvs_uplist.Visible =false
        local function eachupdatecb(node,index)
            local lb_upname = node:FindChildByEditName('lb_upname',true)
            lb_upname.Text = Util.GetText(subInfo[index].subname)
            local lb_needexp = node:FindChildByEditName('lb_needexp',true)
            needExp[index] = lb_needexp
            lb_needexp.Text = string.format('(%d)',subInfo[index].cost_num)
            
            --激活穴位变绿
            lb_needexp.FontColor = GameUtil.RGB2Color(Constants.Color.White)
            for i, v in ipairs(rsp.s2c_activited) do
                if rsp.s2c_activited[i] ==subInfo[index].id then
                    lb_needexp.FontColor = GameUtil.RGB2Color(Constants.Color.Green)
                end
            end
            
            local lb_add=node:FindChildByEditName('lb_add',true)
            local lb_addnum= node:FindChildByEditName('lb_addnum',true)
            local atr=MeridiansModel.GetXlsFixedAttribute(subInfo[index])
            
            local skill = MeridiansModel.GetSpecialSkillText(subInfo[index].id)
            if skill then
                lb_add.Text = Util.GetText(skill.skill_desc)
                lb_addnum.Visible = false
            else
                for i = 1, #atr do
                    if atr[i].Value ~= 0 then
                        lb_add.Text = ItemModel.GetAttributeString({Name = atr[i].Name,Value = 0})
                        lb_addnum.Text = '+'..atr[i].Value
                        lb_addnum.Visible = true
                        break
                    end
                end
            end
        end
        UIUtil.ConfigGridVScrollPanWithOffset(self.comps.sp_list,self.comps.cvs_uplist,1,#subInfo,0,14,eachupdatecb)
    end)
    
    --冲脉
    local function Niubility(time)
        MeridiansModel.RequestGetThroughMeridians(mainIndex,time,function (rsp)
            DataMgr.Instance.UserData.OverFlowExp = tonumber(rsp.s2c_overflowexp)
            if DataMgr.Instance.UserData.OverFlowExp == 0 then
                local cvs_fengyin = HudManager.Instance:GetHudUI("MainHud"):FindChildByEditName("cvs_fengyin", true)
                if cvs_fengyin then
                    cvs_fengyin.Visible=false
                end
            end
            if rsp.s2c_cost ~= 0 then--表示有提升
                SetGGValue(rsp.s2c_cost,maxSub.cost_num)
                ShowItem(self)
            end
            
            --更新可升级经脉
            if rsp.s2c_unlocked and #rsp.s2c_unlocked > 0 then
                for i, v in ipairs(rsp.s2c_unlocked) do
                    table.insert(MeridiansModel.UnlockedList,v)
                end
            end
            
            if rsp.s2c_activited and #rsp.s2c_activited >0 then--表示有某穴位激活
                for i, v in ipairs(rsp.s2c_activited) do
                    table.insert(self.ActivitedList,v)--激活的穴位id插入到激活列表中
                    --移除旧的数据
                    for l = #MeridiansModel.UnlockedList, 1,-1 do
                        if MeridiansModel.UnlockedList[l] == v then
                            table.remove(MeridiansModel.UnlockedList,l)
                        end
                    end
                    
                    for j, k in ipairs(subInfo) do
                        if rsp.s2c_activited[i] == subInfo[j].id then
                            GameAlertManager.Instance:ShowNotify(Util.GetText('meridians_activation',Util.GetText(subInfo[j].subname)))
                            needExp[j].FontColor = GameUtil.RGB2Color(Constants.Color.Green)
                        end
                    end
                end
                --升级完刷下界面
                UpDateNowMeridians(self)
            end
            
            --判断有没有其他红点
            for i, v in ipairs(MeridiansModel.UnlockedList) do
                if self.redPoint[v] then
                    if MeridiansModel.IsCanAdvanceMeridians(v) then
                        GlobalHooks.UI.ShowRedPoint(self.redPoint[v],1,'meridiansadvance')
                    else
                        GlobalHooks.UI.ShowRedPoint(self.redPoint[v],0,'meridiansadvance')
                    end
                end
            end
        end)
    end

    local tempCost={}
    for i, v in ipairs(subInfo) do
        tempCost[subInfo[i].id]=subInfo[i].cost
    end
    local function Lanjie(time)
        for i, v in ipairs(MeridiansModel.UnlockedList) do
            if tempCost[v] then--在可激活列表中
                --两者都不足
                if ItemModel.CountItemByTemplateID(tempCost[v].costitem[1]) < tempCost[v].costnum[1] and DataMgr.Instance.UserData.OverFlowExp < tempCost[v].costnum[2] then
                        GameAlertManager.Instance:ShowNotify(Util.GetText('item_notenoughcount'))
                    return
                end
                --道具不足，并且点击一键冲脉，需弹框提示
                if ItemModel.CountItemByTemplateID(tempCost[v].costitem[1]) < tempCost[v].costnum[1] and time ==0 then
                    self.comps.cvs_alert.Visible =true
                    self.comps.bt_no.TouchClick=function()
                        self.comps.cvs_alert.Visible=false
                    end
                    self.comps.bt_yes.TouchClick =function()
                        self.comps.cvs_alert.Visible=false
                        Niubility(-1)
                    end
                    return
                end
            end
        end
        Niubility(time)
    end
    
    --冲脉
    self.comps.btn_up.TouchClick = function ()
        Lanjie(1)
    end
    --一键冲脉
    self.comps.btn_keepup.TouchClick = function ()
        Lanjie(0)
    end
    
    self.comps.cvs_up.TouchClick =function ()
        self.comps.cvs_up.Visible=false
        choose.Visible=false
    end
end


--每次翻页都会走
local function UpdateInterface(self,index)
    self.comps.btn_midleft.Visible = index ~= 1
    self.comps.btn_midright.Visible = index ~=3 and index ~=2
    self.comps.btn_topright.Visible = index == 2
    self.comps.btn_downright.Visible = index == 2
    self.comps.btn_midleft.Enable = true
    self.comps.btn_midright.Enable = true
    self.comps.btn_topright.Enable = true
    self.comps.btn_downright.Enable = true
    
    --1左边，2中间，3右上，4右下
    self.TabTag = down and 4 or index
    if loadDataFinish then
        UpDateNowMeridians(self)
    end
end


--只走一次
local function CreateEachUI(self,node,index)
    self.MeridiansNode[index]={}
    
    local img = index == 2 and '#dynamic/TL_meridians1/output/TL_meridians1.xml|TL_meridians1|0' or '#dynamic/TL_meridians1/output/TL_meridians1.xml|TL_meridians1|1'
    UIUtil.SetImage(node,img,false, UILayoutStyle.IMAGE_STYLE_BACK_4_CENTER)
    
    local cvsnode=node:FindChildByEditName('cvs_node',true)
    cvsnode.Visible=false
    
    local  pos = MeridiansModel.GetEveryOneMeridianPos(index)
    for i, v in ipairs(pos) do
        if string.IsNullOrEmpty(v) then
            table.remove(pos,i)
        end
    end
    for i = 1, #pos do
        local clone = cvsnode:Clone()
        node:AddChild(clone)
        table.insert(self.MeridiansNode[index],clone)
        --设置每个圆盘位置
        local fixposdata=string.split(pos[i],',')--拆分坐标
        local fixpos = {x = tonumber(fixposdata[1]),y = tonumber(fixposdata[2])}-- 偏移坐标
        clone.Transform.localPosition=Vector2(fixpos.x,fixpos.y)
        
        local ib_choose = clone:FindChildByEditName('ib_choose',true)
        clone.TouchClick = function()
            ib_choose.Visible=true
            ShowPowerUp(self,i,ib_choose,index)
        end
    end
end

local function InitMainScroll(self)
    --用于保存每页的子经脉
    self.MeridiansNode={}
    self.comps.cvs_main.Visible=false
    local function CreateCB(node, index)
        --1左边，2主页，3右边
        CreateEachUI(self,node,index+1)
    end
    local function MoveEndCB(index)
        UpdateInterface(self,index+1)
    end
    UIUtil.ConfigPageScrollPan(self.comps.sp_main,self.comps.cvs_main,3,false,CreateCB,MoveEndCB)
    
    self.TabTag = 2
    self.comps.sp_main:ShowPage(1)
    self.comps.btn_midleft.TouchClick=function(sender)
        down = false
        sender.Enable=false
        self.comps.sp_main:ShowPrevPage()
        ReleaseEffect(self)
    end
    self.comps.btn_midright.TouchClick=function(sender)
        down = false
        sender.Enable=false
        self.comps.sp_main:ShowNextPage()
        ReleaseEffect(self)
    end
    self.comps.btn_topright.TouchClick=function(sender)
        down = false
        sender.Enable=false
        self.comps.sp_main:ShowNextPage()
        ReleaseEffect(self)
    end
    self.comps.btn_downright.TouchClick=function(sender)
        down = true
        sender.Enable=false
        self.comps.sp_main:ShowNextPage()
        ReleaseEffect(self)
    end
end

local function InitProgressBar(self)
    self.progressBar={}
    for i = 1, 5 do
        local progress = self.comps.cvs_up:FindChildByEditName('gg_'..i,true)
        table.insert(self.progressBar,progress)
    end
end

function _M.OnInit(self)
    self.AllMeridiansInfo =MeridiansModel.GetAllMeridiansInfo()
    --重新排序索引位置
    local temp = MeridiansModel.GetMainIndex()
    self.mainIndex = {}
    for i, v in ipairs(temp) do
        self.mainIndex[temp[i].id] = temp[i].mainindex
    end
    
    InitMainScroll(self)
    InitProgressBar(self)
    
    self.ui.menu:SetUILayer(self.comps.cvs_up,1001,-200)
    self.comps.btn_tip.TouchClick =function()
        self.comps.cvs_help.Visible=true
        self.ui.menu:SetUILayer(self.comps.cvs_help,1001,-400)
        self.comps.cvs_help.TouchClick =function()
            self.comps.cvs_help.Visible=false
        end
    end

    self.meridiansItemID = self.AllMeridiansInfo[1].cost.costitem[1]
    self.comps.btn_additem.TouchClick =function()
        local additem = {detail = ItemModel.GetDetailByTemplateID(self.meridiansItemID),cb = closecb}
        UIUtil.ShowGetItemWay(additem)
    end
end


function _M.OnEnter(self)
    self.redPoint={}
    --增加监听并设置红点
    function _M.OnCountUpdate(eventname,params)
        if params.TemplateID == self.meridiansItemID then
            self.comps.lb_itemnum.Text = ItemModel.CountItemByTemplateID(self.meridiansItemID)
            for i, v in ipairs(MeridiansModel.UnlockedList) do
                if MeridiansModel.IsCanAdvanceMeridians(v) and self.redPoint[v] then
                    GlobalHooks.UI.ShowRedPoint(self.redPoint[v],1,'meridiansadvance')
                end
            end
        end
    end
    EventManager.Subscribe('Event.Item.CountUpdate', _M.OnCountUpdate)
    MeridiansModel.RequestGetMeridiansInfo(0,function (rsp)
        DataMgr.Instance.UserData.OverFlowExp = tonumber(rsp.s2c_overflowexp)
        self.ActivitedList = rsp.s2c_activited
        MeridiansModel.UnlockedList = rsp.s2c_unlocked
        UpDateNowMeridians(self)
        self.comps.lb_itemnum.Text = ItemModel.CountItemByTemplateID(self.meridiansItemID)
        ShowItem(self)
    end)
end

function _M.OnExit(self)
    EventManager.Unsubscribe('Event.Item.CountUpdate', _M.OnCountUpdate)
    loadDataFinish = false
    ReleaseEffect(self)
    self.comps.cvs_up.Visible=false
    self.comps.cvs_help.Visible=false
    if self.ib_choose then
        self.ib_choose.Visible=false
    end
    --退出时处理hud的红点
    GlobalHooks.UI.SetRedTips('Meridians',0)
    for i, v in ipairs(MeridiansModel.UnlockedList) do
        if MeridiansModel.IsCanAdvanceMeridians(MeridiansModel.UnlockedList[i]) then
            GlobalHooks.UI.SetRedTips('Meridians',1)
            break
        end
    end
end

return _M