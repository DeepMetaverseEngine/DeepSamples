---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xujing.xu.
--- DateTime: 2018/10/26 10:56
---能力提升 AdvanceTips
local _M = {}
_M.__index = _M


local UIUtil = require 'UI/UIUtil'
local Util = require 'Logic/Util'


local function FindInfoByKey(tab)
    local info={}
    for k, v in pairs(tab) do
        local data = unpack(GlobalHooks.DB.Find('AdvanceTips',{key = k}))
        if data then
            table.insert(info,data)
        end
    end
    table.sort(info,function (a,b) 
        return a.order<b.order
    end)
    return info
end


function _M.OnInit(self)
    HudManager.Instance:InitAnchorWithNode(self.comps.cvs_up, bit.bor(HudManager.HUD_RIGHT,HudManager.HUD_BOTTOM))
    self.ui.menu.ShowType = UIShowType.Cover
    self.ui.menu:SetCompAnime(self.ui.menu, UIAnimeType.NoAnime)
    self:EnableTouchFrame(false)
    self.ui.comps.cvs_up.Enable=false
end


--自适应
local function SelfAdaption(self)
    if #self.advtips ==0 then
        self.ui:Close()
    elseif #self.advtips ==1 then
        self.comps.cvs_upinfo.Size2D=Vector2(self.comps.cvs_upinfo.Size2D.x,53)
        self.comps.sp_list.Size2D=Vector2(self.comps.sp_list.Size2D.x,53)
        self.comps.sp_list.Scrollable.Scroll.vertical = false
    elseif #self.advtips ==2 then
        self.comps.cvs_upinfo.Size2D=Vector2(self.comps.cvs_upinfo.Size2D.x,90)
        self.comps.sp_list.Size2D=Vector2(self.comps.sp_list.Size2D.x,90)
        self.comps.sp_list.Scrollable.Scroll.vertical = false
    elseif #self.advtips ==3 then
        self.comps.cvs_upinfo.Size2D=Vector2(self.comps.cvs_upinfo.Size2D.x,130)
        self.comps.sp_list.Size2D=Vector2(self.comps.sp_list.Size2D.x,114)
        self.comps.sp_list.Scrollable.Scroll.vertical = true
    else
        self.comps.cvs_upinfo.Size2D=Vector2(self.comps.cvs_upinfo.Size2D.x,148)
        self.comps.sp_list.Size2D=Vector2(self.comps.sp_list.Size2D.x,131)
        self.comps.sp_list.Scrollable.Scroll.vertical = true
    end
end


local function SetList(self,node,index)
    node.Text=Util.GetText(self.advtips[index].name)
    node.TouchClick=function(sender)
        FunctionUtil.OpenFunction(self.advtips[index].function_id)
        table.remove(self.advtips,index)
        UIUtil.ConfigVScrollPan(self.comps.sp_list, self.comps.btn_aim, #self.advtips, function(node, index)
            SetList(self, node, index)
        end)
        SelfAdaption(self)
    end
end


function _M.OnEnter(self,...)
    local params={...}
    self.advtips=FindInfoByKey(params[1])
    SelfAdaption(self)
    
    self.comps.cvs_upinfo.Visible=false
    self.comps.btn_aim.Visible=false
    self.comps.btn_open.TouchClick=function(sender)
        if self.comps.cvs_upinfo.Visible==true then
            self.comps.cvs_upinfo.Visible=false
        else
            self.comps.cvs_upinfo.Visible=true
        end
    end

    UIUtil.ConfigVScrollPan(self.comps.sp_list, self.comps.btn_aim, #self.advtips, function(node, index)
        SetList(self, node, index)
    end)
end


function _M.Reset(self,...)
    local params={...}
    local adv=FindInfoByKey(params[1])
    if #adv ~= #self.advtips then
        self.advtips=adv
        UIUtil.ConfigVScrollPan(self.comps.sp_list, self.comps.btn_aim, #self.advtips, function(node, index)
            SetList(self, node, index)
        end)
        SelfAdaption(self)
    else
        for i = 1, #self.advtips do
            if self.advtips[i].key ~=adv[i].key then
                self.advtips=adv
                self.comps.sp_list:RefreshShowCell()
                return
            end
        end
    end
end


function _M.OnExit(self)

end


return _M
