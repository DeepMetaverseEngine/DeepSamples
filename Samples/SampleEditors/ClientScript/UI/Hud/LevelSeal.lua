---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xujing.xu.
--- DateTime: 2018/12/11 14:38
---等级封印

local _M = {}
_M.__index = _M

local LevelModel=require('Model/LevelSealModel')
local Util = require 'Logic/Util'


--分钟转化成天/小时/分钟
local function ConvertTimeFormMinToDay(min)
    local timeDay = math.floor(min/1440)
    local timeHour = math.fmod(math.floor(min/60), 24)
    local timeMinute = math.fmod(min, 60)
    return timeDay, timeHour, timeMinute
end


function _M.OnInit(self)
    self.ui.menu:SetCompAnime(self.ui.menu, UIAnimeType.FadeMoveDown)
end


local function InitSealCvs(self)
    self.comps.cvs_seal.Visible=true
    self.comps.cvs_release.Visible=false
    
    local cvs_level=self.comps.cvs_seal:FindChildByEditName('cvs_level',true)
    local lb_nowlevel=cvs_level:FindChildByEditName('lb_nowlevel',true)
    local lb_nextlevel=cvs_level:FindChildByEditName('lb_nextlevel',true)
    local lb_time=cvs_level:FindChildByEditName('lb_time',true)
    lb_nowlevel.Text=Util.GetText('skill_lv',self.curLvInfo.level_seal)
    lb_nextlevel.Text=Util.GetText('skill_lv',self.nextLvInfo.level_seal)
    
    local day,hour,min=ConvertTimeFormMinToDay(self.leftTimeToNext)
    local daystr=Util.GetText('common_day',math.abs(day))
    local hourstr=Util.GetText('common_hour',math.abs(hour))
    local minstr=Util.GetText('common_min',math.abs(min))
    if self.leftTimeToNext < 60 then --小于1小时
        lb_time.Text = minstr..Util.GetText('common_storeexp_text1')
    elseif self.leftTimeToNext >=60 and self.leftTimeToNext <1440 then --大于1小时，小于1天
        lb_time.Text = hourstr..minstr..Util.GetText('common_storeexp_text1')
    else --大于1天
        lb_time.Text = daystr..hourstr..minstr..Util.GetText('common_storeexp_text1')
    end
    
    local cvs_exp=self.comps.cvs_seal:FindChildByEditName('cvs_exp',true)
    local gg_exp=cvs_exp:FindChildByEditName('gg_exp',true)
    gg_exp.Text=self.storageExp..'/'..self.curLvInfo.limit_exp
    gg_exp.Value = (self.storageExp/self.curLvInfo.limit_exp)*100 >=100 and 100 or (self.storageExp/self.curLvInfo.limit_exp)*100
end


local function InitReleaseCvs(self)
    self.comps.cvs_seal.Visible=false
    self.comps.cvs_release.Visible=true
    
    local cvs_levelup = self.comps.cvs_release:FindChildByEditName('cvs_levelup',true)
    local lb_nowlevel=cvs_levelup:FindChildByEditName('lb_nowlevel',true)
    lb_nowlevel.Text=Util.GetText('skill_lv',self.curLvInfo.level_seal)
    
    local cvs_expup = self.comps.cvs_release:FindChildByEditName('cvs_expup',true)
    local gg_expup=cvs_expup:FindChildByEditName('gg_expup',true)
    gg_expup.Text = self.storageExp..'/'..self.curLvInfo.limit_exp
    gg_expup.Value = (self.storageExp/self.curLvInfo.limit_exp)*100 >=100 and 100 or (self.storageExp/self.curLvInfo.limit_exp)*100
    
    local btn_get=cvs_expup:FindChildByEditName('btn_get',true)
    btn_get.Visible= self.curLvInfo.level_seal < self.nextLvInfo.level_seal or DataMgr.Instance.UserData.Level < self.curLvInfo.level_seal
    btn_get.TouchClick=function(sender)
        LevelModel.RequestGetOverflowExp(function ()
            self.storageExp = 0
            DataMgr.Instance.UserData.OverFlowExp = 0
            local cvs_fengyin = HudManager.Instance:GetHudUI("MainHud"):FindChildByEditName("cvs_fengyin", true)
            if cvs_fengyin then
                cvs_fengyin.Visible=false
            end
            self.ui:Close()
        end)
    end
end


function _M.OnEnter(self)
    
    LevelModel.RequestLvLimitInfo(function (rsp)
        self.storageExp = rsp.s2c_overflow_exp
        DataMgr.Instance.UserData.OverFlowExp=rsp.s2c_overflow_exp
        
        if DataMgr.Instance.UserData.OverFlowExp == 0 then
            local cvs_fengyin = HudManager.Instance:GetHudUI("MainHud"):FindChildByEditName("cvs_fengyin", true)
            if cvs_fengyin then
                cvs_fengyin.Visible=false
                self.ui:Close()
                return
            end
        end
        
        self.leftTimeToNext=rsp.s2c_left_mins
        self.curLvInfo=LevelModel.GetLevelSealInfoByLv(rsp.s2c_cur_lv_limit)
        self.nextLvInfo=LevelModel.GetLevelSealInfoByLv(rsp.s2c_next_lv_limit)
        if self.storageExp ~= 0 and DataMgr.Instance.UserData.Level == rsp.s2c_cur_lv_limit then
            InitSealCvs(self)
        end
        if rsp.s2c_cur_lv_limit == rsp.s2c_next_lv_limit or DataMgr.Instance.UserData.Level < rsp.s2c_cur_lv_limit then
            InitReleaseCvs(self)
        end
    end)
    
    self.comps.btn_help.TouchClick=function()
        self.comps.cvs_help.Visible=true
        self.comps.cvs_help.TouchClick=function()
            self.comps.cvs_help.Visible=false
        end
    end
end


function _M.OnExit(self)

end



return _M 