---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xujing.xu.
--- DateTime: 2018/9/11 9:38
---
local _M = {}
_M.__index = _M

--self.Index   第几页商店
--self.buyIndex 购买物品的索引
--self.togbtn  商店大分类的togglebtn组
local RechargeModel=require('Model/RechargeModel')
local UIUtil = require 'UI/UIUtil'
local Util = require 'Logic/Util'
local ItemModel = require 'Model/ItemModel'
local ShopModel = require 'Model/ShopModel'
local ServerTime = require 'Logic/ServerTime'
local TimeUtil = require 'Logic/TimeUtil'
local times


--计算折扣
local function CalcOff(self,nowprice,originalprice)
    local off = (nowprice/originalprice)*10
    return tonumber(string.format("%.1f",off))
end


--true为显示打折，false不打折
local function  ShowOffSaleOrLeftTime(sale,salenum,isoff)
    sale.Visible=isoff
    salenum.Visible=isoff
end


--翻页
local function SelectByIndex(self, index)
    UIUtil.MoveToScrollCell(
            self.ui.comps.sp_oar,
            index,
            function(node)
            end
    )
end


--查询物品是否vip额外购买
local function ShowCvsVip(self,tab)
    local str='purchase_limit_'..tab.identification_code
    local t=RechargeModel.GetVipInfoValueByKey(str)
    return t
end


--查询购买数量
local function FindBoughtNum(self,item_id)
    for k, v in pairs(self.serverstore) do
        if k==item_id then
            return v
        end
    end
end


--设置购买数量&价格
local function  SetBuyNumberAndPrice(self,node,itemdetail)
    --数量
    local cvs_num=node:FindChildByEditName('cvs_num',true)
    local lb_num=cvs_num:FindChildByEditName('lb_num',true)
    local btn_minus=cvs_num:FindChildByEditName('btn_minus',true)
    local btn_plus=cvs_num:FindChildByEditName('btn_plus',true)
    --价格
    local  cvs_price=node:FindChildByEditName('cvs_price',true)
    local lb_pricenum=cvs_price:FindChildByEditName('lb_pricenum',true)
    local ib_huobi3=cvs_price:FindChildByEditName('ib_huobi3',true)
    --拥有
    local cvs_own=node:FindChildByEditName('cvs_own',true)
    local lb_ownnum=cvs_own:FindChildByEditName('lb_ownnum',true)
    local ib_huobi4=cvs_own:FindChildByEditName('ib_huobi4',true)

    --设置默认单价以及货币类型
    lb_pricenum.Text = itemdetail.money_base
    local defaultcost=ItemModel.GetDetailByTemplateID(itemdetail.cost_id)
    MenuBase.SetImageBox(ib_huobi3,'static/item/'..defaultcost.static.atlas_id,UILayoutStyle.IMAGE_STYLE_BACK_4, 8)
    --设置折扣后的价格
    local cvs_now=node:FindChildByEditName('cvs_now',true)
    local lb_salenum=cvs_now:FindChildByEditName('lb_salenum',true)
    local ib_sale=cvs_now:FindChildByEditName('ib_sale',true)
    lb_salenum.Transform.localRotation = Quaternion.Euler(0, 0, -30);
    local lb_nownum=cvs_now:FindChildByEditName('lb_nownum',true)
    local lb_text=cvs_now:FindChildByEditName('lb_text',true)
    lb_nownum.Text=itemdetail.cost_num

    --是否显示折扣
    local off=CalcOff(self,itemdetail.cost_num,itemdetail.money_base)
    ShowOffSaleOrLeftTime(ib_sale,lb_salenum,off<10)
    lb_salenum.Text=Util.GetText(Constants.Vip.Off,off)
    lb_text.Visible=ib_sale.Visible
    lb_nownum.Visible=ib_sale.Visible

    --拥有的货币类型及数量
    local cost=ItemModel.GetDetailByTemplateID(itemdetail.cost_id)
    MenuBase.SetImageBox(ib_huobi4,'static/item/'..cost.static.atlas_id,UILayoutStyle.IMAGE_STYLE_BACK_4, 8)
    lb_ownnum.Text=ItemModel.CountItemByTemplateID(itemdetail.cost_id)

    --根据identification_code查询该物品是否限购，如果vipextracount不为空，返回vipextracount，否则返回表内数据
    local vipextracount=ShowCvsVip(self,itemdetail)
    local max=(vipextracount ~= nil and {vipextracount + itemdetail.restriction_num} or {itemdetail.restriction_num})[1]

    --显示购买数量和总价
    lb_num.Text=self.buyItemNum
    btn_minus.TouchClick=function()
        self.buyItemNum=(self.buyItemNum>1 and {self.buyItemNum-1} or {1})[1]
        lb_num.Text=self.buyItemNum
        lb_nownum.Text=itemdetail.cost_num *self.buyItemNum
        lb_pricenum.Text = itemdetail.money_base *self.buyItemNum
    end
    btn_plus.TouchClick=function()
        self.buyItemNum = self.buyItemNum + 1 >= 999 and 999 or self.buyItemNum + 1
        if max ~=0 and self.buyItemNum > max then
            self.buyItemNum= max
        end
        lb_num.Text=self.buyItemNum
        lb_nownum.Text=itemdetail.cost_num *self.buyItemNum
        lb_pricenum.Text = itemdetail.money_base *self.buyItemNum
    end
    cvs_num.TouchClick=function()--根据限量(或vip限购)判断键盘输入最大值
        local maxNum= (max==0 and {999} or {max})[1]
        GlobalHooks.UI.OpenUI('NumInput',0, 1, maxNum, {pos=nil, anchor=nil}, function(value)
            self.buyItemNum = value
            lb_num.Text=self.buyItemNum
            lb_nownum.Text=itemdetail.cost_num *self.buyItemNum
            lb_pricenum.Text =itemdetail.money_base *self.buyItemNum
        end)
    end
end


--购买后刷新数据                          商店页签/物品索引/购买数量/物品详情
local function UpdateRecord(self,index,buyIndex,buyItemNum,itemdata)
    self.record[index][buyIndex]=(self.record[index][buyIndex] or 0)+buyItemNum
    local lb_limitnum=self.cvs_itemdata:FindChildByEditName('lb_limitnum',true)
    local vipextra=ShowCvsVip(self,itemdata)
    lb_limitnum.Text=((vipextra or 0) + self.store[buyIndex].restriction_num) - times.boughtNum-self.record[index][buyIndex]..'/'..((vipextra or 0) + self.store[buyIndex].restriction_num)
end


--发送协议购买物品
local function BuyItem(self,item,num)

    local itemData = self.store[self.buyIndex]

    if itemData == nil then
        GameAlertManager.Instance:ShowNotify(Constants.Text.shop_noItem)
        return
    end
    if DataMgr.Instance.UserData.Bag.EmptySlotCount == 0 then
        GameAlertManager.Instance:ShowNotify(Util.GetText('common_bagfull'))
        return
    end
    
    if ItemModel.CountItemByTemplateID(itemData.cost_id) >= (item.cost_num*self.buyItemNum) then
        ShopModel.RequestBuyItem(item.store_type,itemData.item_id,self.buyItemNum,function(resp)
            --刷新剩余的金币
            local  lb_ownnum=self.cvs_itemdata:FindChildByEditName('lb_ownnum',true)
            lb_ownnum.Text=ItemModel.CountItemByTemplateID(itemData.cost_id)
            GameAlertManager.Instance:ShowNotify(Constants.Text.shop_buysucc)
            UpdateRecord(self,self.Index,self.buyIndex,self.buyItemNum,itemData)
        end)
    else
        --如果钱不够，则弹出二次提示框，引导充值vip
        if itemData.cost_id ~= Constants.VirtualItems.Contribution then
            local tag =''
            if itemData.cost_id == Constants.VirtualItems.Diamond then
                tag = 'not_enough_gold'
            elseif itemData.cost_id == Constants.VirtualItems.Silver then
                tag = 'not_enough_silver'
            elseif itemData.cost_id == Constants.VirtualItems.Copper then
                tag ='not_enough_copper'
            else--如果货币是物品，跳获取框
                local additem = {detail = ItemModel.GetDetailByTemplateID(itemData.cost_id),cb = closecb}
                UIUtil.ShowGetItemWay(additem)
                return
            end
            RechargeModel.GoToYuanBao =  itemData.cost_id ~= Constants.VirtualItems.Diamond
            FunctionUtil.GotoInSameUI(tag)
        else
            GameAlertManager.Instance:ShowNotify(Util.GetText('guild_notenough_contribution'))
        end
        --PlanB
--[[        local content = itemData.cost_id ==3 and '元宝不足' or '银两不足'
        GameAlertManager.Instance:ShowAlertDialog(AlertDialog.PRIORITY_NORMAL,
            content,'','',
            nil,
            function()
                if itemData.cost_id ==3 then
                    --GlobalHooks.UI.FindUI('RechargeFrame').tbts[2].IsChecked=true
                else
                    RechargeModel.GoToYuanBao=true
                    GlobalHooks.UI.FindUI('RechargeFrame').tbts[1].IsChecked=true
                end
            end,nil)]]
    end
end


--显示物品详细信息以及价格等(打开ui,切换页签,点击物品都会走这里)
local function ShowItemDetail(self,storedata,index)
    if self.cvs_itemdata ==nil then
        self.cvs_itemdata=self.ui.comps.cvs_itemdata
    end

    local itemdetail=ItemModel.GetDetailByTemplateID(storedata[index].item_id)
    --物品名字&物品描述
    local lb_name=self.cvs_itemdata:FindChildByEditName('lb_name',true)
    local tb_tips=self.cvs_itemdata:FindChildByEditName('tb_tips',true)

    tb_tips.Scrollable = true
    tb_tips.Scroll.vertical =false
    tb_tips.Scroll.Container.Position2D =Vector2(0,0)
    tb_tips.TextComponent.event_PointerDown = function()
        tb_tips.Scroll.vertical =true
    end
    
    lb_name.Text=Util.GetText(itemdetail.static.name)
    tb_tips.XmlText = '<f>'..Util.GetText(itemdetail.static.desc)..'</f>'
    --每日限购&剩余时间
    local lb_limit=self.cvs_itemdata:FindChildByEditName('lb_limit',true)
    local lb_limitnum=self.cvs_itemdata:FindChildByEditName('lb_limitnum',true)
    local lb_time=self.cvs_itemdata:FindChildByEditName('lb_time',true)
    local lb_timenum=self.cvs_itemdata:FindChildByEditName('lb_timenum',true)
    --vip额外购买
    local cvs_vip=self.cvs_itemdata:FindChildByEditName('cvs_vip',true)

    local off=CalcOff(self,self.store[index].cost_num,self.store[index].money_base)
    local  lefttime=string.IsNullOrEmpty(storedata[index].sell_end_time)
    if not lefttime then
        local time=FunctionUtil.ParseServerTime(storedata[index].sell_end_time):ToLocalTime()
        local endtime=time:Subtract(ServerTime.getServerTime())
        if endtime.TotalSeconds >= 0 then
            ShowOffSaleOrLeftTime(lb_time,lb_timenum,true)
            lb_timenum.Text=TimeUtil.FormatToCN(endtime.TotalSeconds)
        end
    else
        ShowOffSaleOrLeftTime(lb_time,lb_timenum,false)
    end
    
    --查询改物品vip是否可以额外购买
    local vipextra=ShowCvsVip(self,storedata[index])
    if vipextra ~=nil and vipextra ~=0 then
        cvs_vip.Visible=true
        local lb_viplv=cvs_vip:FindChildByEditName('lb_viplv',true)
        local lb_counts=cvs_vip:FindChildByEditName('lb_counts',true)
        lb_viplv.Text='至尊'..DataMgr.Instance.UserData.VipLv
        lb_counts.Text=vipextra
    else
        cvs_vip.Visible=false
    end

    lb_limit.Visible=storedata[index].restriction_num ~= 0
    lb_limit.Text=Constants.StroeLimit[storedata[index].restriction_type]
    lb_limitnum.Visible=storedata[index].restriction_num ~= 0
    times=FindBoughtNum(self,storedata[index].item_id)
    if self.record[self.Index][self.buyIndex] ~=nil then
        local surplus=((vipextra or 0) + storedata[index].restriction_num) - times.boughtNum-self.record[self.Index][self.buyIndex]
        lb_limitnum.Text=(surplus >=0 and  {surplus} or  {0})[1]..'/'..(vipextra or 0)+storedata[index].restriction_num
    else
        lb_limitnum.Text=((vipextra or 0) + storedata[index].restriction_num) - times.boughtNum..'/'.. (vipextra or 0)+storedata[index].restriction_num
    end

    SetBuyNumberAndPrice(self,self.cvs_itemdata,storedata[index])

    local btn_begin=self.cvs_itemdata:FindChildByEditName('btn_begin',true)
    btn_begin.TouchClick=function()
        --print_r('购买物品/购买数量',Util.GetText(itemdetail.static.name)..'/'..self.buyItemNum)
        BuyItem(self,storedata[self.buyIndex],self.buyItemNum)
    end
end


--设置每个物品的togbtn
local function ShowToggleBtn(self,node,index)
    local togButton = node:FindChildByEditName('tbt_opt',true)
    togButton.IsChecked=self.buyIndex==index
    togButton.TouchClick = function ()
        self.buyIndex=index
        self.ui.comps.sp_oar:RefreshShowCell()
        togButton.IsChecked=true
        self.buyItemNum=1
        --print_r('物品index/物品名称',index..'/'..Util.GetText(ItemModel.GetDetailByTemplateID(self.store[index].item_id).static.name))
        --设置右边道具描述等
        ShowItemDetail(self,self.store,self.buyIndex)
    end
end


local function  UpDateItem(self,node,index)
    --如果多复制出来了，则隐藏多余的控件
    if index > #self.store then
        node.Visible=false
        return
    end
    --折扣
    local lb_salenum1=node:FindChildByEditName('lb_salenum1',true)
    lb_salenum1.Transform.localRotation = Quaternion.Euler(0, 0, -30);
    local ib_sale=node:FindChildByEditName('ib_sale',true)

    --是否显示折扣
    local off=CalcOff(self,self.store[index].cost_num,self.store[index].money_base)
    ShowOffSaleOrLeftTime(ib_sale,lb_salenum1,off<10)
    lb_salenum1.Text=Util.GetText(Constants.Vip.Off,off)

    --设置togbtn
    ShowToggleBtn(self,node,index)

    local item=ItemModel.GetDetailByTemplateID(self.store[index].item_id)
    local quality = item.static.quality
    local icon=item.static.atlas_id
    local num =1
    --物品图片&名字
    local cvs_itemicon=node:FindChildByEditName('cvs_itemicon',true)
    local lb_itemname=node:FindChildByEditName('lb_itemname',true)
    UIUtil.SetItemShowTo(cvs_itemicon,icon,quality,num)
    lb_itemname.Text=Util.GetText(item.static.name)

    --物品价格&货币类型
    local ib_huobi=node:FindChildByEditName('ib_huobi',true)
    local lb_itemprice=node:FindChildByEditName('lb_itemprice',true)
    local cost=ItemModel.GetDetailByTemplateID(self.store[index].cost_id)
    MenuBase.SetImageBox(ib_huobi,'static/item/'..cost.static.atlas_id,UILayoutStyle.IMAGE_STYLE_BACK_4, 8)
    lb_itemprice.Text=self.store[index].cost_num

    --限时时间
    local lb_time=node:FindChildByEditName('lb_time',true)

end


--初始化物品信息(打开ui,切换页签都会走这里)
local function InitItems(self,selectIndex)
    ShopModel.RequestGetStoreBoughtInfo(self.shopData[selectIndex].store_type,function (rsp)
        self.serverstore=rsp.s2c_data
       self.store=ShopModel.GetStoreData(self.shopData[self.Index].store_type,self.serverstore)
        local function eachupdatecb(node,index)
            UpDateItem(self,node,index)
        end
        UIUtil.ConfigGridVScrollPanWithOffset(self.ui.comps.sp_oar,self.ui.comps.cav_goods,2,#self.store,6,4,eachupdatecb)
        SelectByIndex(self,self.buyIndex or  1)
        ShowItemDetail(self,self.store,self.buyIndex)
    end)
end


--设置商店页签togbtn(只在打开ui时执行一次)
local function InitToggleButton(self)
    self.togbtn={}
    for i = 1, self.ui.comps.cvs_an.NumChildren do
        self.togbtn[i]=self.ui.comps.cvs_an:FindChildByEditName('tbt_an'..i,true)
        self.togbtn[i].UserTag=i
        if i > #self.shopData then
            self.togbtn[i].Visible=false
        else
            self.togbtn[i].Text= Util.GetText(self.shopData[i].type_name)
        end
    end

    local function ToggleFunction(sender)
        sender.TouchClick=function()
            self.Index=sender.UserTag
            self.buyIndex=1
            self.buyItemNum=1
            InitItems(self,self.Index)
            --ShowItemDetail(self,self.store,self.buyIndex)
            --print_r('商店index',self.Index..'//商店type  '..self.shopData[self.Index].store_type)
        end
    end
    UIUtil.ConfigToggleButton(self.togbtn,self.togbtn[self.Index],false,ToggleFunction)
end


function _M.OnInit(self)

end


local function FilterOverdueShopId(self)
    local tab = GlobalHooks.DB.Find('Store_Type',{store_id = self.id})
    for i, v in ipairs(tab) do
        if not string.IsNullOrEmpty(v.sell_star_time) then
            local startDate = System.DateTime.Parse(v.sell_star_time)
            local endDate = System.DateTime.Parse(v.sell_end_time)
            local serverTime = ServerTime.getServerTime()
            
            startDate = startDate:ToUniversalTime()
            endDate = endDate:ToUniversalTime()
            local isOpen = true
            -- 未开始和已结束
            if System.DateTime.Compare(serverTime,startDate) < 0 or System.DateTime.Compare(serverTime,endDate) > 0 then
                isOpen= false
            end
            if not isOpen then
                table.remove(tab,i)
            end
        end
    end
    return tab
end


function _M.OnEnter(self,...)
    --获取vip商店的类型
    if self.ui.tag =='RechargeShop' then
        self.id=1
    elseif self.ui.tag =='RechargeShopSilver' then
        self.id=2
    elseif self.ui.tag =='RechargeGuild' then
        self.id=tonumber(GlobalHooks.DB.GetGlobalConfig('guild_storeid'))
    else
        return
    end
    self.shopData = FilterOverdueShopId(self)--GlobalHooks.DB.Find('Store_Type',{store_id = self.id})
    if self.shopData == nil then
        GlobalHooks.UI.CloseUIByTag('Recharge')
        UnityEngine.Debug.LogError("RechargeShopId =  "..id.." is not exist")
        return
    end
    
    local params={...}
    if RechargeModel.GoToYuanBao then
        RechargeModel.GoToYuanBao=false
        local fun = unpack(GlobalHooks.DB.Find('Function_Data',{function_id = 'silver_get'}))
        params={tonumber(fun.type.val[3]),tonumber(fun.type.val[4])}
    end
    if params[1] then --如果传商店类型，跳转指定商店页签
        for i = 1, #self.shopData do
            if self.shopData[i].store_type == params[1] then
                self.Index=i
                break
            end
            self.Index = 1 --防止参数错误，保底
        end
    else --不传参，默认数值
        self.Index=1 --默认打开第一页商店
    end

    self.buyItemNum=1 --默认购买数量为1
    self.ui.comps.cav_goods.Visible=false
    self.record={}
    for i = 1, #self.shopData do
        self.record[i]={}
    end

    ShopModel.RequestGetStoreBoughtInfo(self.shopData[self.Index].store_type,function (rsp)
        self.serverstore=rsp.s2c_data
        self.store=ShopModel.GetStoreData(self.shopData[self.Index].store_type,self.serverstore)
        if params[2] then --如果传商品ID，跳转指定商品索引
            local itemdetail = ItemModel.GetDetailByTemplateID(params[2])
            for i = 1, #self.store do
                if self.store[i].item_id == params[2] or self.store[i].item_id == itemdetail.static.storegoto_id then
                    self.buyIndex=i
                    break
                end
                self.buyIndex = 1 --防止参数错误，保底
            end
        else
            self.buyIndex=1 --默认选中第一个商品
        end
        InitToggleButton(self)
        --InitItems(self,self.Index)
        local function eachupdatecb(node,index)
            UpDateItem(self,node,index)
        end
        UIUtil.ConfigGridVScrollPanWithOffset(self.ui.comps.sp_oar,self.ui.comps.cav_goods,2,#self.store,6,4,eachupdatecb)
        SelectByIndex(self,self.buyIndex or  1)
        ShowItemDetail(self,self.store,self.buyIndex)
    end)
end


function _M.OnExit(self)

end

return _M