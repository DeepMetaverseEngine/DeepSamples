---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xujing.xu.
--- DateTime: 2018/10/18 13:40
---首充奖励


local _M = {}
_M.__index = _M

local RechargeModel=require('Model/RechargeModel')
local ItemModel = require 'Model/ItemModel'
local UIUtil = require 'UI/UIUtil'

function _M.OnInit(self)
    self.ui.menu:SetCompAnime(self.ui.menu, UIAnimeType.NoAnime)
    self.ui.menu:SetFullBackground(UILayout.CreateUILayoutColor(UnityEngine.Color(0,0,0,0.5),UnityEngine.Color(0,0,0,0.5)))
end

--获取首充信息
local function RequestGetFirstRechargeInfo(cb)
    local request= {}
    Protocol.RequestHandler.ClientGetFirstRechargeInfoRequest(request, function(rsp)
        if cb then
            cb(rsp)
        end
    end)
end
--申请首充奖励
local function RequestGetFirstRechargeReward(rank,cb)
    local request={c2s_rank = rank }
    Protocol.RequestHandler.ClientGetFirstRechargeRewardRequest(request, function(rsp)
        if cb then
            cb(rsp)
        end
    end)
end


local function Release3DModel(self)
    if self.model ==nil then
        return
    end
    for i = 1, #self.model do
        if self.model[i] then
            UI3DModelAdapter.ReleaseModel(self.model[i].Key)
            self.model[i] = nil
        end
    end
end

local function InitModel(self)
    Release3DModel(self)
    local cvs_anchor={}
    self.model={}
    cvs_anchor[1]=self.ui.comps.cvs_anchor1
    cvs_anchor[2]=self.ui.comps.cvs_anchor2
    for i = 1, #self.firstRecharge[1].showmodel do
        local fixposdata=string.split(self.firstRecharge[1].pos_xy[i],',')
        local fixpos = {x = tonumber(fixposdata[1]),y = tonumber(fixposdata[2])}
        local info = UI3DModelAdapter.AddSingleModel(
                cvs_anchor[i],
                Vector2(fixpos.x,fixpos.y),
                tonumber(self.firstRecharge[1].zoom[i]),
                self.ui.menu.MenuOrder,
                self.firstRecharge[1].showmodel[i])
        self.model[i] = info
        info.Callback = function (info2)
            local trans2 = info2.RootTrans
            trans2:Rotate(Vector3.up,self.firstRecharge[1].rotate[i])
        end
    end
end


local function InsertAndSortForTab(self,tab)
    self.rechargedata={}
    for k, v in pairs(tab) do
        local rechargeinfo= RechargeModel.GetCommonRechargeByRechargeId(k)
        if rechargeinfo ~= nil then
            table.insert(self.rechargedata,rechargeinfo)
        end
    end
    table.sort(self.rechargedata,function (a,b)
        return a.order < b.order
    end)
end

local function BuyFristRecharge(self)
    local productid = 0
    for i, v in ipairs(self.rechargedata) do
        if v.first_skip == self.rank then
            productid = v.id
            break
        end
    end
    local needsignature = OneGameSDK.Instance:GetPlatformData():GetInt(SDKAttName.NEED_SIGN)
    local queryOrder = OneGameSDK.Instance:GetPlatformData():GetInt(SDKAttName.QUERY_ORDER)
    RechargeModel.RequestRechargeBySellId(productid,RechargeModel.GetRechargePlatformID(false),needsignature,queryOrder,function (rsp)
        local ord=rsp.s2c_ext_data
        RechargeModel.SDKPayment(ord,queryOrder,RechargeModel.GetRechargePlatformID(false))--SDK相关支付流程
    end)
end

local function InitBtn(self)
    --点击直接充值  by亚锟
    RechargeModel.RequestRechargeInfo(OneGameSDK.Instance.PlatformID,function(rsp)
        InsertAndSortForTab(self,rsp.s2c_data)
        self.comps.btn_pay.TouchClick = function()
            BuyFristRecharge(self)
        end
    end)
end


local function SetEach(self,node,index,day)
    local itemdetail=ItemModel.GetDetailByTemplateID(tonumber(self.firstRecharge[day].show.item[index]))
    local quality = itemdetail.static.quality
    local icon=itemdetail.static.atlas_id
    local number=tonumber(self.firstRecharge[day].show.itemnum[index])
    local itshow=UIUtil.SetItemShowTo(node,icon,quality,number)
    itshow.EnableTouch = true
    itshow.TouchClick = function()
        UIUtil.ShowNormalItemDetail({x=node.X+250,y=node.Y+120,detail = itemdetail,itemShow = itshow,autoHeight = true,autoWeight=true})
    end
end


local function InitInfo(self)
    self.firstRecharge = RechargeModel.GetFirstRechargeInfo(self.rank)
    for i = 1, #self.firstRecharge do
        local sp_item = self.comps.cvs_info:FindChildByEditName('sp_item'..i,true)
        local cvs_item = self.comps.cvs_info:FindChildByEditName('cvs_item'..i,true)
        cvs_item.Visible=false
        local btn_get = self.comps.cvs_info:FindChildByEditName('btn_get'..i,true)
        local lb_got = self.comps.cvs_info:FindChildByEditName('lb_got'..i,true)
        
        btn_get.Visible = true
        btn_get.IsGray =  not (self.rechargeProgress[self.rank] == i and self.rechargeAvailable[self.rank] == true)
        btn_get.Enable = not btn_get.IsGray
        lb_got.Visible = self.rechargeProgress[self.rank] > i and self.rechargeAvailable[self.rank] == false
        
        btn_get.TouchClick = function(sender)
            RequestGetFirstRechargeReward(self.rank,function (rsp)
                lb_got.Visible=true
                GlobalHooks.UI.OpenUI('GainItem',0,self.firstRecharge[i].reward.item,3)
                self.rechargeAvailable[self.rank] = false
                self.ui:Close()
                --三天全部领完，隐藏icon
                if rsp.s2c_close then
                    EventManager.Fire("Event.Hud.SetTopIcon", { comp = 'cvs_firstrecharge', showIcon = false })
                end
            end)
        end
        local function eachupdatecb(node,index)
            SetEach(self,node,index,i)
        end
        UIUtil.ConfigHScrollPanWithOffset(sp_item,cvs_item,#self.firstRecharge[i].show.item,0,eachupdatecb)
    end
    InitModel(self)
    InitBtn(self)
    self.comps.lb_fight.Text = self.firstRecharge[1].show_fight
end

local function InitUIComp(self)
    InitInfo(self)
    local function ToggleFunction(sender)
        sender.TouchClick =function ()
            if sender:Equals(self.comps.tbt_low) then
                self.rank = 1
                InitInfo(self)
            else
                self.rank = 2
                InitInfo(self)
            end
        end
    end
    UIUtil.ConfigToggleButton({self.comps.tbt_low,self.comps.tbt_high},
            self.rank ==1 and self.comps.tbt_low or self.comps.tbt_high,false,ToggleFunction)
end


local function UpdateInterface(self,eventname,params)
    RequestGetFirstRechargeInfo(function (rsp)
        self.rechargeRank = rsp.s2c_recharge_rank --充值档位
        --领取天数
        self.rechargeProgress[1] = rsp.s2c_get_reward_progress_low
        self.rechargeProgress[2] = rsp.s2c_get_reward_progress_high
        --当天是否可领
        self.rechargeAvailable[1] = rsp.s2c_available_low_get
        self.rechargeAvailable[2] = rsp.s2c_available_high_get
        
        self.comps.btn_pay.Visible = self.rechargeRank < 2
        self.comps.lb_got.Visible = self.rechargeRank == 2
        self.rank = self.rechargeRank
        InitUIComp(self)
    end)
end

function _M.OnEnter(self)
    function _M.OnUpdateInterface(eventname, params)
        UpdateInterface(self,eventname, params)
    end
    EventManager.Subscribe('Event.Recharge.RechargeUIUpdate',_M.OnUpdateInterface)
    RequestGetFirstRechargeInfo(function (rsp)
        self.rechargeRank = rsp.s2c_recharge_rank --充值档位
        --领取天数
        self.rechargeProgress={}
        self.rechargeProgress[1] = rsp.s2c_get_reward_progress_low
        self.rechargeProgress[2] = rsp.s2c_get_reward_progress_high
        --当天是否可领
        self.rechargeAvailable={}
        self.rechargeAvailable[1] = rsp.s2c_available_low_get
        self.rechargeAvailable[2] = rsp.s2c_available_high_get
        
        self.comps.btn_pay.Visible = self.rechargeRank < 2
        self.comps.lb_got.Visible = self.rechargeRank == 2
        self.rank = self.rechargeRank == 0 and 2 or self.rechargeRank
        InitUIComp(self)
    end)
end

function _M.OnExit(self)
    Release3DModel(self)
    GlobalHooks.UI.SetRedTips('firstrecharge', 0)
    for i = 1, 2 do
        if self.rechargeAvailable[i] == true then
            GlobalHooks.UI.SetRedTips('firstrecharge', 1)
            break
        end
    end
    EventManager.Unsubscribe('Event.Recharge.RechargeUIUpdate',_M.OnUpdateInterface)
end

return _M
