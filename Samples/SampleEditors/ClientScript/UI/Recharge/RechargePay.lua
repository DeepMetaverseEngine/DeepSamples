---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xujing.xu.
--- DateTime: 2018/9/11 9:37
---
local _M = {}
_M.__index = _M

local RechargeModel=require('Model/RechargeModel')
local UIUtil = require('UI/UIUtil') 
local Util = require('Logic/Util') 
local ItemModel=require('Model/ItemModel')

local cvs_title
local cvs_info
local sp_pay
_M.MyCard=false


--ui缩放
local function  ScaleNode(node,scale,duration,pos2D)
    node.Enable=false
    local scaleAction = ScaleAction()
    scaleAction.ScaleX = scale
    scaleAction.ScaleY = scale
    scaleAction.ScaleType = ScaleAction.ScaleTypes.Center
    scaleAction.Duration = duration
    node:AddAction(scaleAction)
    scaleAction.ActionFinishCallBack = function()
        node.Position2D=pos2D
        node.Scale=Vector2(1,1)
        node.Enable=true
    end
end


--通过购买id，查询购买次数
local function InquiryBuyCount(self,payid)
    if _M.MyCard then 
        for k, v in pairs(self.MyCard) do
            if k==payid then
                return v
            end
        end
    else
        for k, v in pairs(RechargeModel.BuyInfo) do
            if k==payid then
                return v
            end
        end
    end
end


--设置产品相关信息
local function SetRechargeInfo(self,node,index)
    local cvsPos={}
    cvsPos[index]=node.Position2D

    --隐藏多余的控件
    if index > #self.rechargedata then
        node.Visible=false
        return
    end

    --产品id
    local productid=self.rechargedata[index].id
    
    --相关控件赋值
    local ib_tu=node:FindChildByEditName('ib_tu',true) 
    local lb_getnum=node:FindChildByEditName('lb_getnum',true) 
    local lb_money=node:FindChildByEditName('lb_money',true)
    local cvs_first=node:FindChildByEditName('cvs_first',true)
    local cvs_special =node:FindChildByEditName('cvs_special',true)
    local ib_present=cvs_first:FindChildByEditName('ib_present',true)
    local lb_presentnum=cvs_first:FindChildByEditName('lb_presentnum',true)
    
    UIUtil.SetImage(ib_tu,self.rechargedata[index].pic_res)
    lb_getnum.Text=self.rechargedata[index].show_gold
    lb_money.Text=Util.GetText(self.rechargedata[index].show_price)
    
    --确定是否显示首冲奖励
    local first=InquiryBuyCount(self,productid)
    if first.s2c_buy_count_total < self.rechargedata[index].bonustimes then
        cvs_special.Visible = false
        cvs_first.Visible=true
        local defaultcost=ItemModel.GetDetailByTemplateID(self.rechargedata[index].bonusreward.item.id[1])
        MenuBase.SetImageBox(ib_present,'static/item/'..defaultcost.static.atlas_id,UILayoutStyle.IMAGE_STYLE_BACK_4, 8)
        lb_presentnum.Text = self.rechargedata[index].show_bonus
    else
        cvs_first.Visible=false
        --mycard有特殊档位需要显示cvs
        cvs_special.Visible = self.rechargedata[index].spe_switch == 1 
    end
    
    --购买物品
    node.TouchClick=function(sender)
        ScaleNode(sender,0.95,0.1,cvsPos[index])
        local needsignature = OneGameSDK.Instance:GetPlatformData():GetInt(SDKAttName.NEED_SIGN)
        local queryOrder = OneGameSDK.Instance:GetPlatformData():GetInt(SDKAttName.QUERY_ORDER)
        --区分不同渠道id
--[[        local platformid=_M.MyCard and RechargeModel.MyCardPlatformID or OneGameSDK.Instance.PlatformID]]
        RechargeModel.RequestRechargeBySellId(productid,RechargeModel.GetRechargePlatformID(_M.MyCard),needsignature,queryOrder,function (rsp)
            local ord=rsp.s2c_ext_data
            RechargeModel.SDKPayment(ord,queryOrder,RechargeModel.GetRechargePlatformID(_M.MyCard))--SDK相关支付流程
            end)
        end
end


local function InsertAndSortForTab(self,tab)
    self.rechargedata={}
    for k, v in pairs(tab) do
        local rechargeinfo= RechargeModel.GetCommonRechargeByRechargeId(k)
        if rechargeinfo ~= nil then
            table.insert(self.rechargedata,rechargeinfo)
        end
    end
    table.sort(self.rechargedata,function (a,b)
        return a.order < b.order
    end)
end


--初始化面板信息
local function InitInfo(self,node)
    local cvs_pay= node:FindChildByEditName('cvs_pay',true)
    cvs_pay .Visible=false
    
    local function eachupdatecb(node,index)
        SetRechargeInfo(self,node,index)
    end
    UIUtil.ConfigGridVScrollPanWithOffset(self.ui.comps.sp_pay,cvs_pay,3,#self.rechargedata,6,4,eachupdatecb)
    --数量>=6个才让滑(策划要求)
    self.ui.comps.sp_pay.Scrollable.Scroll.vertical = #self.rechargedata >=6 
end


--设置渠道tog
local function InitToggleBtn(self)
    local function ToggleFunction(sender)
        sender.TouchClick=function(sender)
            if sender:Equals(self.comps.tbn_google) then
                _M.MyCard=false
                InsertAndSortForTab(self,RechargeModel.BuyInfo)
                InitInfo(self,cvs_info)
            elseif sender:Equals(self.comps.tbn_mycard) then
                _M.MyCard=true
                RechargeModel.RequestRechargeInfo(RechargeModel.MyCardPlatformID,function(rsp)
                    self.MyCard=rsp.s2c_data
                    InsertAndSortForTab(self,self.MyCard)
                    InitInfo(self,cvs_info)
                end)
            end
        end
    end
    local tog =_M.MyCard and self.comps.tbn_mycard or self.comps.tbn_google
    UIUtil.ConfigToggleButton({self.comps.tbn_google,self.comps.tbn_mycard},tog,false,ToggleFunction)
end


--初始化标题
local function  InitTitle(self,node)
    if node ==nil then
        node=self.comps.cvs_title
    end

    local cvs_vip12=node:FindChildByEditName('cvs_vip12',true)
    local cvs_vip13=node:FindChildByEditName('cvs_vip13',true)
    cvs_vip12.Visible=DataMgr.Instance.UserData.VipLv ~= 13
    cvs_vip13.Visible=not cvs_vip12.Visible

    --累充礼包 
    local btn_libao=node:FindChildByEditName('btn_libao',true)
    btn_libao.TouchClick=function()
        GlobalHooks.UI.OpenUI('BusinessFrame',0,'accumulate')
    end

    --Vip相关信息
    local gg_vip=node:FindChildByEditName('gg_vip',true)
    local  lb_vipnum=node:FindChildByEditName('lb_vipnum',true)
    local ib_vip=node:FindChildByEditName('ib_vip',true)
    RechargeModel.SetVipLvAndPro(gg_vip,lb_vipnum,ib_vip,DataMgr.Instance.UserData.VipCurExp)
    lb_vipnum.FontColorRGB = Constants.Color.White
    
    self.comps.tbn_google.Visible = RechargeModel.ShowRechargeBtn
    self.comps.tbn_mycard.Visible =RechargeModel.ShowRechargeBtn
    if RechargeModel.ShowRechargeBtn then
        InitToggleBtn(self)
    end
end


local function InitComponent(self)
    InitTitle(self,cvs_title)
    InitInfo(self,cvs_info)
end


function _M.OnInit(self)
    cvs_title=self.comps.cvs_title
    cvs_info=self.comps.cvs_info
    sp_pay=self.ui.comps.sp_pay
end


--收到信息之后初始化界面
local function InitUI(self,eventname, params)
    RechargeModel.BuyInfo=params.buycount
    InsertAndSortForTab(self,RechargeModel.BuyInfo)
    InitComponent(self)
end


--收到通知刷新界面
local function UpdateInterface(self,eventname, params)
    --更新购买信息
    if _M.MyCard then
        self.MyCard=params.buycount
    else
        RechargeModel.BuyInfo=params.buycount
    end
    InitTitle(self,cvs_title)
    sp_pay:RefreshShowCell()
end


function _M.OnEnter(self)
    --如果RechargeModel.BuyInfo不为空
    if next(RechargeModel.BuyInfo) ~=nil then
        InsertAndSortForTab(self,RechargeModel.BuyInfo)
        InitComponent(self)
    else--为空则重新发送协议获取
        RechargeModel.RequestRechargeInfo(OneGameSDK.Instance.PlatformID,function(rsp)
            RechargeModel.BuyInfo=rsp.s2c_data
            InsertAndSortForTab(self,RechargeModel.BuyInfo)
            InitComponent(self)
        end)
    end
    
    function _M.OnInitUI(eventname, params)
        InitUI(self,eventname, params)
    end
    EventManager.Subscribe('Event.Recharge.RechargeUIInit',_M.OnInitUI)
    function _M.OnUpdateInterface(eventname, params)
        UpdateInterface(self,eventname, params)
    end
    EventManager.Subscribe('Event.Recharge.RechargeUIUpdate',_M.OnUpdateInterface)
    --检查无用订单
    RechargeModel.CheckUselessOrder(sp_pay)
end

function _M.OnExit(self)
    _M.MyCard=false
    EventManager.Unsubscribe('Event.Recharge.RechargeUIUpdate',_M.OnUpdateInterface)
    EventManager.Unsubscribe('Event.Recharge.RechargeUIInit',_M.OnInitUI)
end


return _M