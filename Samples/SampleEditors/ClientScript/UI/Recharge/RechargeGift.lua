---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xujing.xu.
--- DateTime: 2018/9/13 11:20
---
local _M = {}
_M.__index = _M

local RechargeModel=require'Model/RechargeModel'
local UIUtil = require 'UI/UIUtil'
local Util = require 'Logic/Util'
local ItemModel = require 'Model/ItemModel'

local cvs_title
local cvs_info
local sp_libao
local gainIndex
_M.MyCard=false


--设置奖励预览
local function ShowGift(self,index,node,i)
    --获取品质和数量
    local itemdetail=ItemModel.GetDetailByTemplateID(tonumber(self.giftdata[index].reward.item.id[i]))
    local quality = itemdetail.static.quality
    local icon=itemdetail.static.atlas_id
    local number=tonumber(self.giftdata[index].reward.item.num[i])
    local itshow=UIUtil.SetItemShowTo(node,icon,quality,number)
    itshow.EnableTouch = true
    itshow.TouchClick = function()
        local detail = UIUtil.ShowNormalItemDetail({detail = itemdetail,itemShow = itshow,autoHeight = true,autoWeight=true})
    end
end


--通过购买id，查询购买次数
local function InquiryBuyCount(self,productidid)
    if _M.MyCard then
        for k, v in pairs(self.MyCard) do
            if k==productidid then
                return v
            end
        end
    else
        for k, v in pairs(RechargeModel.BuyInfo) do
            if k==productidid then
                return v
            end
        end
    end
end


--设置礼包信息
local function SetGiftInfo(self,node,index)
    
    local btn_buy=node:FindChildByEditName('btn_buy',true)
    local lb_limitnum=node:FindChildByEditName('lb_limitnum',true)
    local lb_name=node:FindChildByEditName('lb_name',true)
    local cvs_limit=node:FindChildByEditName('cvs_limit',true)
    local cvs_full=node:FindChildByEditName('cvs_full',true)
    local cvs_item={}
    for i = 1, 4 do
        cvs_item[i]=node:FindChildByEditName('cvs_item'..i,true)
        cvs_item[i].Visible=i <= #self.giftdata[index].reward.item.id
    end

    --产品id
    local productid=self.giftdata[index].id
    
    lb_name.Text=Util.GetText(self.giftdata[index].name)
    
    --每周限购
    local count=InquiryBuyCount(self,productid)
    if count ~=nil then
        if self.giftdata[index].limit_num-count.s2c_buy_count <=0 then
            btn_buy.IsGray=true
            btn_buy.IsInteractive=false
            cvs_full.Visible=true
            cvs_limit.Visible=false
            lb_limitnum.Text=''
        else
            btn_buy.IsGray=false
            btn_buy.IsInteractive=true
            cvs_full.Visible=false
            cvs_limit.Visible=true
            lb_limitnum.Text=(self.giftdata[index].limit_num-count.s2c_buy_count)..'/'..self.giftdata[index].limit_num
        end
    end
    
    for i = 1, #self.giftdata[index].reward.item.id do
        if self.giftdata[index].reward.item.id[i] ~=0 then
            ShowGift(self,index,cvs_item[i],i)
        end
        cvs_item[i].Visible=self.giftdata[index].reward.item.id[i] ~=0
    end
        
    --购买礼包
    btn_buy.Text=Util.GetText('business_activity_showprice',self.giftdata[index].show_price)
    btn_buy.TouchClick=function()
        local needsignature = OneGameSDK.Instance:GetPlatformData():GetInt(SDKAttName.NEED_SIGN)
        local queryOrder = OneGameSDK.Instance:GetPlatformData():GetInt(SDKAttName.QUERY_ORDER)
--[[        local platformid=_M.MyCard and RechargeModel.MyCardPlatformID or OneGameSDK.Instance.PlatformID]]
            RechargeModel.RequestRechargeBySellId(productid,RechargeModel.GetRechargePlatformID(_M.MyCard),needsignature,queryOrder,function (rsp)
                local ord=rsp.s2c_ext_data
                gainIndex=index
                RechargeModel.SDKPayment(ord,queryOrder,RechargeModel.GetRechargePlatformID(_M.MyCard))
            end)
        end
end


local function InsertAndSortForTab(self,tab)
    self.giftdata={}
    for k, v in pairs(tab) do
        local giftinfo= RechargeModel.GetShowGiftRechargeById(k)
        if giftinfo ~= nil and giftinfo.is_show ~=0 then
            table.insert(self.giftdata,giftinfo)
        end
    end
    table.sort(self.giftdata,function (a,b)
        return a.order < b.order
    end)
end


local function InitInfo(self,node)
    local cvs_buy= node:FindChildByEditName('cvs_buy',true)
    cvs_buy .Visible=false
    local function eachupdatecb(node,index)
        SetGiftInfo(self,node,index)
    end
    UIUtil.ConfigHScrollPanWithOffset(self.ui.comps.sp_libao,cvs_buy,#self.giftdata,10,eachupdatecb)
end


--设置渠道tog
local function InitToggleBtn(self)
    local function ToggleFunction(sender)
        sender.TouchClick=function(sender)
            if sender:Equals(self.comps.tbn_google) then
                _M.MyCard=false
                InsertAndSortForTab(self,RechargeModel.BuyInfo)
                InitInfo(self,cvs_info)
            elseif sender:Equals(self.comps.tbn_mycard) then
                _M.MyCard=true
                RechargeModel.RequestRechargeInfo(RechargeModel.MyCardPlatformID,function(rsp)
                    self.MyCard=rsp.s2c_data
                    InsertAndSortForTab(self,self.MyCard)
                    InitInfo(self,cvs_info)
                end)
            end
        end
    end
    local tog=_M.MyCard and self.comps.tbn_mycard or self.comps.tbn_google
    UIUtil.ConfigToggleButton({self.comps.tbn_google,self.comps.tbn_mycard},tog,false,ToggleFunction)
end


--初始化标题
local function  InitTitle(self,node)
    if node==nil then
        node=self.comps.cvs_title
    end

    local cvs_vip12=node:FindChildByEditName('cvs_vip12',true)
    local cvs_vip13=node:FindChildByEditName('cvs_vip13',true)
    cvs_vip12.Visible=DataMgr.Instance.UserData.VipLv ~= 13
    cvs_vip13.Visible=not cvs_vip12.Visible
    local btn_libao=node:FindChildByEditName('btn_libao',true)
    btn_libao.TouchClick=function()
        GlobalHooks.UI.OpenUI('BusinessFrame', 0,'accumulate')
    end

    --Vip相关信息
    local gg_vip=node:FindChildByEditName('gg_vip',true)
    local lb_vipnum=node:FindChildByEditName('lb_vipnum',true)
    local ib_vip=node:FindChildByEditName('ib_vip',true)
    RechargeModel.SetVipLvAndPro(gg_vip,lb_vipnum,ib_vip,DataMgr.Instance.UserData.VipCurExp)
    lb_vipnum.FontColorRGB = Constants.Color.White

    self.comps.tbn_google.Visible = RechargeModel.ShowRechargeBtn
    self.comps.tbn_mycard.Visible =RechargeModel.ShowRechargeBtn
    if RechargeModel.ShowRechargeBtn then
        InitToggleBtn(self)
    end
end


local function InitComponent(self)
    InitTitle(self,cvs_title)
    InitInfo(self,cvs_info)
end


function _M.OnInit(self)
    cvs_title=self.ui.comps.cvs_title
    cvs_info=self.ui.comps.cvs_info
    sp_libao=self.ui.comps.sp_libao
end


--收到信息之后初始化界面
local function InitUI(self,eventname, params)
    RechargeModel.BuyInfo=params.buycount
    InsertAndSortForTab(self,RechargeModel.BuyInfo)
    InitComponent(self)
end


--收到通知刷新界面
local function UpdateInterface(self,eventname, params)
    --更新购买信息
    if _M.MyCard then
        self.MyCard=params.buycount
    else
        RechargeModel.BuyInfo=params.buycount
    end
    InitTitle(self,cvs_title)
    sp_libao:RefreshShowCell()
end


--收到vip购买成功之后，显示获得物品ui
--[[local function ShowGainUI(self,eventname,params)
    GlobalHooks.UI.OpenUI('GainItem',0,self.giftdata[gainIndex].reward.item,3)
end]]


function _M.OnEnter(self)
    
    --如果RechargeModel.BuyInfo不为空
    if next(RechargeModel.BuyInfo) ~=nil then
        InsertAndSortForTab(self,RechargeModel.BuyInfo)
        InitComponent(self)
    else--为空则重新发送协议获取
        RechargeModel.RequestRechargeInfo(OneGameSDK.Instance.PlatformID,function(rsp)
            RechargeModel.BuyInfo=rsp.s2c_data
            InsertAndSortForTab(self,RechargeModel.BuyInfo)
            InitComponent(self)
        end)
    end

    
    function _M.OnInitUI(eventname, params)
        InitUI(self,eventname, params)
    end
    EventManager.Subscribe('Event.Recharge.RechargeUIInit',_M.OnInitUI)
    function _M.OnUpdateInterface(eventname, params)
        UpdateInterface(self,eventname, params)
    end
    EventManager.Subscribe('Event.Recharge.RechargeUIUpdate',_M.OnUpdateInterface)
--[[    function _M.ShowGainItemUI(eventname, params)
        ShowGainUI(self,eventname, params)
    end
    EventManager.Subscribe('Event.VIP.VipProductPaySuccess',_M.ShowGainItemUI)]]
    --检查无用订单
    RechargeModel.CheckUselessOrder(sp_libao)
end


function _M.OnExit(self)
    _M.MyCard=false
    EventManager.Unsubscribe('Event.Recharge.RechargeUIUpdate',_M.OnUpdateInterface)
    EventManager.Unsubscribe('Event.Recharge.RechargeUIInit',_M.OnInitUI)
--[[    EventManager.Unsubscribe('Event.VIP.VipProductPaySuccess',_M.ShowGainItemUI)]]
end


return _M